# Default values for open-webui.
# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/open-webui/open-webui
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # Optional suffix to add to images.
  suffix: "-slim"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
  - host: open-webui.rwx.im
    paths:
      - path: /
        pathType: ImplementationSpecific
  tls:
  - secretName: open-webui.rwx.im-tls
    hosts:
    - open-webui.rwx.im

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Additional sources of environment variables for the deployed containers.
envFrom:
- secretRef:
    name: open-webui-env

nodeSelector: {}

tolerations: []

affinity: {}

certificate:
  # -- Create the Certificate resource.
  enabled: true
  commonName: open-webui.rwx.im

  # -- Reference to the certificate issuer.
  issuer:
    kind: ClusterIssuer
    name: letsencrypt-production

open_webui:
  webui:
    # -- Enable or disable authentication.
    authentication: true
    # -- The name of the web ui. Appends (Open WebUI) if overridden.
    # name: 'Open WebUI'
    # -- Enable or disable registration of new users.
    registration: false
    # -- The default user role for new users (pending, user or admin)
    # userRole: pending
    # -- The port that the WebUI should be running on.
    port: 8080
    # The URL where Open WebUI is reachable.
    url: https://open-webui.rwx.im

    websocket:
      # -- Enable websocket support.
      enabled: true

  ollama:
    # -- Enable ollama API support.
    enabled: false

  database:
    # -- The URL to use for the database connection.
    # url: postgresql://open_webui_prod:WDjpqlYgdT-H1TPBZWPk5tBCXxK_4T2e@postgres-rw.rwx.svc/open_webui_production
    # -- Specifies the database pool timeout in seconds to get a connection.
    pool_timeout: 30

  tika:
    url: http://open-webui-tika.rwx-openwebui-prod.svc:9998

persistence:
  # -- Enable persistence for file uploads.
  enabled: true
  # -- The size of the volume.
  size: 5Gi
  # -- The storage class for the volume.
  storageClass: "ssd-gp1x2"

tika:
  # -- Enable Apache Tika deployment.
  enabled: true
