apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgresql:14

  resources:
    limits:
      cpu: '2'
      memory: "4Gi"
    requests:
      cpu: "100m"
      memory: "2Gi"

      # backup:
      #   retentionPolicy: '7d'
      #   barmanObjectStore:
      #     serverName: postgres-recovered-2024-06-08
      #     endpointURL: https://s3.eu-central-003.backblazeb2.com
      #     destinationPath: s3://dendrite-postgres-backup
      #     s3Credentials:
      #       accessKeyId:
      #         key: AWS_ACCESS_KEY_ID
      #         name: postgres-backup
      #       region:
      #         key: AWS_REGION
      #         name: postgres-backup
      #       secretAccessKey:
      #         key: AWS_SECRET_ACCESS_KEY
      #         name: postgres-backup
      #     wal:
      #       compression: gzip
      #     data:
      #       compression: gzip

  bootstrap:
    recovery:
      source: postgres-recovered-2024-02
      # recoveryTarget:
      #   backupID: '20240526T033747'

  externalClusters:
  - name: postgres-recovered-2024-02
    barmanObjectStore:
      endpointURL: https://s3.eu-central-003.backblazeb2.com
      destinationPath: s3://dendrite-postgres-backup
      serverName: postgres-recovered-2024-02
      s3Credentials:
        accessKeyId:
          key: AWS_ACCESS_KEY_ID
          name: postgres-backup
        region:
          key: AWS_REGION
          name: postgres-backup
        secretAccessKey:
          key: AWS_SECRET_ACCESS_KEY
          name: postgres-backup
      wal:
        maxParallel: 8

  monitoring:
    enablePodMonitor: false

  # Do a switchover instead of restarting during a rolling upgrade, to prevent
  # downtime.
  # primaryUpdateMethod: switchover

  storage:
    size: 150Gi
    storageClass: ssd

  superuserSecret:
    name: postgres-superuser-auth

  walStorage:
    size: 250Gi
