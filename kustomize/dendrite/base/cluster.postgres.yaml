apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:14

  resources:
    requests:
      memory: "2048Mi"
      cpu: "100m"
    limits:
      memory: "4096Mi"
      cpu: 2

  backup:
    retentionPolicy: '7d'
    barmanObjectStore:
      serverName: postgres-recovered-2024-02
      endpointURL: https://s3.eu-central-003.backblazeb2.com
      destinationPath: s3://dendrite-postgres-backup
      s3Credentials:
        accessKeyId:
          key: AWS_ACCESS_KEY_ID
          name: postgres-backup
        region:
          key: AWS_REGION
          name: postgres-backup
        secretAccessKey:
          key: AWS_SECRET_ACCESS_KEY
          name: postgres-backup

  bootstrap:
    recovery:
      source: clusterBackup

  externalClusters:
  - name: clusterBackup
    barmanObjectStore:
      endpointURL: https://s3.eu-central-003.backblazeb2.com
      destinationPath: s3://dendrite-postgres-backup
      serverName: postgres
      s3Credentials:
        accessKeyId:
          key: AWS_ACCESS_KEY_ID
          name: postgres-backup
        region:
          key: AWS_REGION
          name: postgres-backup
        secretAccessKey:
          key: AWS_SECRET_ACCESS_KEY
          name: postgres-backup
      wal:
        maxParallel: 8

  monitoring:
    enablePodMonitor: true

  # Do a switchover instead of restarting during a rolling upgrade, to prevent
  # downtime.
  primaryUpdateMethod: switchover

  storage:
    size: 150Gi
    storageClass: ssd

  superuserSecret:
    name: postgres-superuser-auth

  walStorage:
    size: 80Gi
