apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: kubevirt
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  description: Project for KubeVirt components and Virtual Machines
  sourceRepos:
  - {{ .Values.repository | quote }}
  destinations:
  # KubeVirt core components.
  - namespace: kubevirt
    server: https://kubernetes.default.svc
  # Containerized Data Importer (CDI)
  - namespace: cdi
    server: https://kubernetes.default.svc
  # Whitelist for cluster-scoped resources that KubeVirt installation requires.
  # This is crucial as KubeVirt installs many CRDs and ClusterRoles.
  clusterResourceWhitelist:
  - group: 'apiextensions.k8s.io'
    kind: 'CustomResourceDefinition'
  - group: 'rbac.authorization.k8s.io'
    kind: 'ClusterRole'
  - group: 'rbac.authorization.k8s.io'
    kind: 'ClusterRoleBinding'
  - group: 'apiregistration.k8s.io'
    kind: 'APIService'
  - group: 'admissionregistration.k8s.io'
    kind: 'MutatingWebhookConfiguration'
  - group: 'admissionregistration.k8s.io'
    kind: 'ValidatingWebhookConfiguration'
  # TODO: Remove access to namespaces. This is currently only allowed because
  # the upstream yaml manifest includes this in the manifest and I'm too
  # lazy to deal with it
  - group: ''
    kind: 'Namespace'
    # Pod priority and preemption
  - group: scheduling.k8s.io
    kind: PriorityClass
  # Containerized Data Importer (CDI) resources
  - group: cdi.kubevirt.io
    kind: CDI
  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
  namespaceResourceBlacklist:
  - group: ''
    kind: ResourceQuota
  - group: ''
    kind: LimitRange
  - group: ''
    kind: NetworkPolicy
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubevirt-core
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: kubevirt
    server: {{ .Values.spec.destination.server }}
  project: kubevirt
  source:
    path: kubevirt/base
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - ApplyOutOfSyncOnly=true
    - PruneLast=true
    - PrunePropagationPolicy=foreground
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubevirt-cdi
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: cdi
    server: {{ .Values.spec.destination.server }}
  project: kubevirt
  source:
    path: kubevirt/cdi
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
  ignoreDifferences:
  # Ignore updates to the `cdis.cdi.kubevirt.io` CRD because the operator is
  # stupid and somehow has different CRDs than the deployment manifest...
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: cdis.cdi.kubevirt.io
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - ApplyOutOfSyncOnly=true
    - PruneLast=true
    - PrunePropagationPolicy=foreground
